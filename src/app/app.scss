// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }
}

.ion-ios-home-custom, .ion-ios-home-custom-outline {
  width: 26px !important;
  height: 26px !important;
  min-width: 26px !important;
}

.ion-ios-home-custom {
  content: url("../assets/img/doc@2x.png");
}

.ion-ios-home-custom-outline {
  content: url("../assets/img/default@2x.png");
}

/*@import "business.scss";*/

.tabs-ios .tab-button-icon {
  height: 24px;
}

.aside-nav {
	width: 100%;
	height: 100%;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 99;
	.aside-nav-bg {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(0,0,0,0.4);
	}
	.aside-nav-content {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background: #222126;
		box-shadow: 0 0 20px rgba(0,0,0,0.5);
		.nav-head {
			height: 140px;
			background: url(../assets/img/nav-bg@3x.png) 0 0 no-repeat;
			background-size: 100% 100%;
			padding: 20px;
			color: #fff;
			font-size: 16px;
			.user-head-img {
				width: 50px;
				height: 50px;
				border: 2px solid #fff;
				border-radius: 50%;
				margin-bottom: 20px;
				margin-top: 5px;
				background: url(../assets/img/userhead@3x.png) 0 0 no-repeat;
				background-size: 100% 100%;
			}
		}
		.nav-list {
			li {
				line-height: 50px;
				color: $newFiveColor;
				position: relative;
				padding-left: 20px;
				font-size: 16px;
				&.active {
					color: #00C77D;
					background: #302F34;
					.icon {
						color: #00C77D;
					}
				}
				&.border-bottom {
					border-bottom: .5px solid #302F34;
				}
				.icon {
					margin-right: 20px;
					font-size: 18px;
				}
			}
		}
		.nav-bottom {
			position: absolute;
			bottom: 0;
			background: #302F34;
			color: #fff;
			.nav-bottom-top {
				margin: 15px 20px 15px 0;
				.extentions {
				}
			}
			.ubbey-contact {
				color: #fff;
				font-size: 18px;
				font-weight: 500;
				line-height: 25px;
				max-width: 140px;
				overflow: hidden;
				text-overflow: ellipsis;
				padding-right: 20px;
			}
			.connection-type {
				padding: 4px 15px;
				line-height: 17px;
				background: #222126;
				border-radius: 20px;
				color: #78777C;
				font-size: 13px;
				font-weight: normal;
			}
			.icon {
				color: #78777C;
			}
		}
		.item-inner {
			flex: none;
			position: absolute;
			right: 0;
			top: 16px;
			right: -6px;
		}
		.add-device {
			text-align: center;
			position: absolute;
			bottom: 0;
			height: 64px;
			width: 100%;
			color: #00C77D;
			line-height: 64px;
			font-size: 18px;
			span {
				margin-left: 8px;
			}
		}
	}
}

ion-icon {
    &[class*="custom-"] {
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center center;
        font-size: 24px;
        width: 24px;
        height: 24px;
        margin: 6px 0;
    }
    // custom icons
    &[class*="custom-home"] {
        background-image: url(../assets/img/home.svg);
    }    
    &[class*="custom-home-active"] {
        background-image: url(../assets/img/home-active.svg);
    }
    &[class*="custom-mining"] {
        background-image: url(../assets/img/mining.svg);
    }    
    &[class*="custom-mining-active"] {
        background-image: url(../assets/img/mining-active.svg);
    }
    &[class*="custom-user"] {
        background-image: url(../assets/img/user.svg);
    }    
    &[class*="custom-user-active"] {
        background-image: url(../assets/img/user-active.svg);
    }
    &[class*="custom-file"] {
      background-image: url(../assets/img/file.svg);
  }    
  &[class*="custom-file-active"] {
      background-image: url(../assets/img/file-active.svg);
  }
}